What's new in UMA 2.13b

You can now enable/disable default wardrobe recipes without removing them from the list in the customization section.
The currently equipped wardrobe recipe is marked with a * in the list.
Enabled recipes are marked with a plus sign.
Disabled recipes are marked with a minus sign.
The Hair Smoosher has been updated and bugs fixed.
Clipping Plane offset - It will now allow you to tune the plane points on the clipping plane slot.
You can now scale and offset the smooshed hair to help adjust for different polygon densities on the hair slot.
Overlays can now have Photoshop-style blend modes applied to them. This allows for more control over how the overlay is blended with the underlying texture.
Blends are specified on the individual texture channel on the overlay.  
Supported blend modes are: Normal, Multiply, Screen, Overlay, Darken, Lighten, Color Dodge, Color Burn, Hard Light, Soft Light, and Subtract.
Drag and drop support for merging recipes into other recipes, with slots/overlays/colors/options.
Mesh Hide asset editor can now export occlusion data to a texture, and load and apply occlusion data from a texture.
Fixed bug in Addressable preloader where it would not ask to load additive recipes, causing those not to work at all when using addressables.
Added new compositing shader for Diffuse/Normal/Metallic workflow, so you can drop it in most recipes.
Added favorites window so you can add whatever favorites you want
Colors can now be marked as "base colors" in the customization window, and filtered to those colors.
Added option to "average normals" on the slot welder.
Added ability on DCA to "force suppress" slots or overlays based on tag. For example, if you want to remove an eyebrow overlay off the face if you have used replacement texture for the face that already contains them.
Added preference to use the Burst Compiler to speed up mesh generation. Requires the burst compiler to be installed.
Added option to tile overlays when using the Keep Textures mode.
Added additional sanity checking in various functions for those times when things are going so well. :)
Disabled index healing (even when enabled in preferences) when playing in the editor
Added option to trigger various rebuild types in the editor, not just a full rebuild.
Added "Second pass" material to UMAMaterial. When present, will duplicate the submesh, and draw the submesh a second time with the second material. This is useful for simulating multi-pass in URP.
Added option to UMAMaterial to specify alternate materials for different SRP pipelines.
ConvertRenderTexture is now off by default on mobile.
Fixed various leaks/bugs in MeshHideAsset Inspector.


What's new in UMA 2.13a4


New compositing shaders for the Keep Textures mode that composite textures on the fly. This allows for faster UMA building, and less memory usage. The masked shader also lets you recolor portions of the mesh without having to have multiple overlays. It also allows you to tile in detail textures for higher realism.
Compositing shaders reworked to allow setting parameters from every overlay in the overlay chain. This allows for more control over the compositing shaders.
UV Attached Items: Slots can be attached to UV locations on the model.
Hair Smoosher:  A clipping plane slot is used to define the place where hair is conformed to the head. This is to stop hair from poking through hats.
New slot events: SlotBeginProcessing, SlotProcessed. These events are called when a slot is being processed, and can be used to add custom processing to slots.
Swap Slots: Conditional slot replacements. Slots can be swapped out in a recipe by tag. For example, if you have a hat that can't use the hair smoosher, you can include "hat hair" with the hat, and swap out any existing hair that is tagged with the tag provided. For example, you might want to swap and "long hair" for the hat hair, but not any short or bald hair.
Asset Index: The index will now attempt to repair itself if it becomes corrupted, or you have asked it for a slot that doesn't exist.
Asset Index: Added function to remove slot references from MeshHideAssets. This is usefult to save memory when building addressables.
Asset Index: new PrepareBuild() function for use in your build scripts to force the index to be rebuilt, fix all references, etc. Note: You will still need to call the SingleGroupGenerator to generate labels after this function is complete.
DynamicCharacterAvatar: You can specity to keep the predefined DNA ("KeepPredefinedDNA"), so it is always loaded when the character is built.
DynamicCharacterAvatar: Added SetSlot(string) function to set a slot by name. Does not need the slot specified.
Texture Combiner Utility: Reworked to make it easier to use.

Many, many bug fixes and improvements.






















